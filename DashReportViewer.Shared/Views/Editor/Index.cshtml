@model DashReportViewer.Shared.Models.Reporting.ReportViewModel

@{
	Layout = "~/Views/Shared/_ReportLayout.cshtml";
	ViewData["Title"] = "Welcome to DashReportViewer";
	ViewData["disableFilter"] = true;
	ViewData["KioskMode"] = false;
}

<link href="~/editor/editor.main.css" rel="stylesheet" type="text/css">
<link data-inline="yes-please" href="~/editor/monarch/monarch.css" rel="stylesheet" />

<div>
	<section class="try">
		<div class="container" style="max-width:unset;">
			<div class="row">
				<div class="col-md-12">&nbsp;</div>
			</div>
			<div class="row">
				<div class="editor-frame col-md-12">
					<div class="loading editor" style="display: none;">
						<div class="progress progress-striped active">
							<div class="bar"></div>
						</div>
					</div>
					<div id="editor"></div>
				</div>
			</div>
		</div>
	</section>
</div>
<button id="btnSend">Send</button>










@await Component.InvokeAsync("ReportComponent", new { reportType = Guid.Parse("A21FDA13-F36F-4AF5-AC05-2A3DABAE04EF") });



















































@section Scripts
{
	<script type="text/javascript" src="/js/require.js"></script>


	<script type="text/javascript">
		$(document).ready(function ($) {
			$("#btnSend").click(function () {

				var value = window.editor.getValue();

				$.post("/Editor/Execute", {
					code: value
				}, function (data, status) {

					alert(data);
				});

			});
		});
	</script>

	<script type="text/javascript">

		'use strict';
		require.config({
			baseUrl: 'https://microsoft.github.io/monaco-editor/node_modules/monaco-editor/min/'
		});


		var editor = null, diffEditor = null;

		$(document).ready(function () {
			require(['vs/editor/editor.main'], function () {


				loadSample();

				changeTheme(1);

				loadDiffSample();

				$('#inline-diff-checkbox').change(function () {
					diffEditor.updateOptions({
						renderSideBySide: !$(this).is(':checked')
					});
				});
			});

			window.onresize = function () {
				if (editor) {
					editor.layout();
				}
				if (diffEditor) {
					diffEditor.layout();
				}
			};
		});

		function loadSample() {
			$.ajax({
				type: 'GET',
				url: "/template/Sample.txt",
				dataType: 'text',
				beforeSend: function () {
					$('.loading.editor').show();
				},
				error: function () {
					if (editor) {
						if (editor.getModel()) {
							editor.getModel().dispose();
						}
						editor.dispose();
						editor = null;
					}
					$('.loading.editor').fadeOut({ duration: 200 });
					$('#editor').empty();
					$('#editor').append('<p class="alert alert-error">Failed to load ' + mode.modeId + ' sample</p>');
				}
			}).done(function (data) {
				if (!editor) {
					$('#editor').empty();
					editor = monaco.editor.create(document.getElementById('editor'), {
						model: null,
					});
				}

				var oldModel = editor.getModel();
				var newModel = monaco.editor.createModel(data, "csharp");
				editor.setModel(newModel);
				if (oldModel) {
					oldModel.dispose();
				}
				$('.loading.editor').fadeOut({ duration: 300 });
			});
		}

		function loadDiffSample() {

			var onError = function () {
				$('.loading.diff-editor').fadeOut({ duration: 200 });
				$('#diff-editor').append('<p class="alert alert-error">Failed to load diff editor sample</p>');
			};

			$('.loading.diff-editor').show();

			var lhsData = null, rhsData = null, jsMode = null;

			$.ajax({
				type: 'GET',
				url: 'https://microsoft.github.io/monaco-editor/index/samples/diff.lhs.txt',
				dataType: 'text',
				error: onError
			}).done(function (data) {
				lhsData = data;
				onProgress();
			});

			$.ajax({
				type: 'GET',
				url: 'https://microsoft.github.io/monaco-editor/index/samples/diff.rhs.txt',
				dataType: 'text',
				error: onError
			}).done(function (data) {
				rhsData = data;
				onProgress();
			});

			function onProgress() {
				if (lhsData && rhsData) {
					diffEditor = monaco.editor.createDiffEditor(document.getElementById('diff-editor'), {
						enableSplitViewResizing: false
					});

					var lhsModel = monaco.editor.createModel(lhsData, 'text/javascript');
					var rhsModel = monaco.editor.createModel(rhsData, 'text/javascript');

					diffEditor.setModel({
						original: lhsModel,
						modified: rhsModel
					});

					$('.loading.diff-editor').fadeOut({ duration: 300 });
				}
			}
		}

		function changeTheme(theme) {
			var newTheme = (theme === 1 ? 'vs-dark' : (theme === 0 ? 'vs' : 'hc-black'));
			if (editor) {
				editor.updateOptions({ 'theme': newTheme });
			}
			if (diffEditor) {
				diffEditor.updateOptions({ 'theme': newTheme });
			}
		}

	</script>
}